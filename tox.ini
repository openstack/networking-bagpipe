[tox]
minversion = 2.0
envlist = py27,py37,pypy,pep8
skipsdist = True

[testenv]
usedevelop = True
setenv =
   OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
   OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
   OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
   PYTHONWARNINGS=default::DeprecationWarning
deps = -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = stestr run {posargs}

# Common definitions shared between dsvm/non-dsvm jobs
[testenv:common]
setenv = OS_TEST_TIMEOUT=180

# Common definitions shared among dsvm jobs
[testenv:dsvm]
setenv = OS_FAIL_ON_MISSING_DEPS=1
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}

[testenv:functional]
basepython = python3
setenv = {[testenv]setenv}
         {[testenv:common]setenv}
         OS_TEST_PATH=./networking_bagpipe/tests/functional
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}
deps =
  {[testenv]deps}
  -r{toxinidir}/networking_bagpipe/tests/functional/requirements.txt

[testenv:dsvm-functional]
basepython = python3
setenv = {[testenv:functional]setenv}
         {[testenv:dsvm]setenv}
sitepackages = True
deps =
  {[testenv:functional]deps}
commands = stestr run {posargs}

[testenv:dsvm-fullstack]
basepython = python3
setenv = {[testenv]setenv}
         {[testenv:common]setenv}
         {[testenv:dsvm]setenv}
         # workaround for DB teardown lock contention (bug/1541742)
         OS_TEST_TIMEOUT=600
         OS_TEST_PATH=./networking_bagpipe/tests/fullstack
deps =
  {[testenv:functional]deps}

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:pep8]
basepython = python3
commands =
    flake8
    pylint -E --rcfile=.pylintrc --output-format=colorized {posargs:networking_bagpipe}
    neutron-db-manage --subproject networking-bagpipe --database-connection sqlite:// check_migration
    {[testenv:genconfig]commands}

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    PYTHON = coverage run --source networking_bagpipe --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:debug]
basepython = python3
commands = oslo_debug_helper {posargs}

[testenv:genconfig]
basepython = python3
commands = {toxinidir}/tools/generate_config_file_samples.sh
whitelist_externals = sh

[flake8]
show-source = True
enable-extensions = H203,H904
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools,.tmp,bagpipe-bgp/*

[testenv:dev]
# run locally (not in the gate) using editable mode
# https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs
# note that order is important to ensure dependencies don't override
commands =
    pip install -q -e "git+https://opendev.org/openstack/networking-bgpvpn#egg=networking_bgpvpn"
    pip install -q -e "git+https://opendev.org/openstack/networking-sfc#egg=networking_sfc"
    pip install -q -e "git+https://opendev.org/openstack/neutron#egg=neutron"

[testenv:py3-dev]
basepython = python3
commands =
    {[testenv:dev]commands}
    {[testenv]commands}

[testenv:pep8-dev]
basepython = python3
commands =
    {[testenv:dev]commands}
    {[testenv:pep8]commands}
